name: WordPress Installation
on:
  push:
    paths-ignore:
      - '**.md'
    pull_request:
      branches:
        - main
      paths-ignore:
        - '**.md'
  workflow_dispatch:

jobs:
  installation:
    strategy:
      fail-fast: false
      matrix:
        wp-version: [ "4.9", "5.0", "5.1", "5.2", "5.3", "5.4", "5.5", "5.6", "5.7", "5.8", "5.9", "6.0" ]
        php-version: [ "7.2", "7.4", "8.0" ]
        exclude:
          - { php-version: "7.4", wp-version: "4.9" }
          - { php-version: "7.4", wp-version: "5.0" }
          - { php-version: "7.4", wp-version: "5.1" }
          - { php-version: "7.4", wp-version: "5.2" }
          - { php-version: "8.0", wp-version: "4.9" }
          - { php-version: "8.0", wp-version: "5.0" }
          - { php-version: "8.0", wp-version: "5.1" }
          - { php-version: "8.0", wp-version: "5.2" }
          - { php-version: "8.0", wp-version: "5.3" }
          - { php-version: "8.0", wp-version: "5.4" }
          - { php-version: "8.0", wp-version: "5.5" }

    name: WordPress Installation
    runs-on: ubuntu-latest

    steps:

      - name: Clone DDEV files
        uses: actions/checkout@v2
        with:
          path: .ddev

      - name: Install DDEV
        env:
          DDEV_VERSION: v1.21.1
        run: |
          # @see https://ddev.readthedocs.io/en/stable/#installationupgrade-script-linux-and-macos-armarm64-and-amd64-architectures
          sudo apt-get -qq update
          sudo apt-get -qq -y install libnss3-tools
          curl -LO https://raw.githubusercontent.com/drud/ddev/master/scripts/install_ddev.sh
          bash install_ddev.sh ${{ env.DDEV_VERSION }}
          ddev config global --instrumentation-opt-in=false --omit-containers=dba,ddev-ssh-agent
          rm install_ddev.sh

      - name: Set WP_VERSION_CODE env
        # used in some directory path and conventional file naming
        # Example : 5.6.5 => wp565
        run: |
           echo "WP_VERSION_CODE=$(echo wp${{ matrix.wp-version }} | sed 's/\.//g' )" >> $GITHUB_ENV


      - name: Start DDEV for ${{ matrix.wp-version }} with PHP ${{ matrix.php-version }}
        run: |
          cp .ddev/config_overrides/config.${{ env.WP_VERSION_CODE }}.yaml .ddev/config.${{ env.WP_VERSION_CODE }}.yaml
          sed -i -e 's/^php_version:.*/php_version: ${{ matrix.php-version }}/g' .ddev/config.${{ env.WP_VERSION_CODE }}.yaml
          ddev start

      - name: Install WordPress ${{ matrix.wp-version }} with PHP ${{ matrix.php-version }}
        run: |
          wget https://wordpress.org/wordpress-${{ matrix.wp-version }}.tar.gz
          tar -xf wordpress-${{ matrix.wp-version }}.tar.gz wordpress
          cp -r wordpress/. ${{ github.workspace }}
          rm -rf wordpress
          rm wordpress-${{ matrix.wp-version }}.tar.gz

      - name: Setup WordPress ${{ matrix.wp-version }} with PHP ${{ matrix.php-version }}
        run: |
          ddev exec wp core install --url='https://${{ env.WP_VERSION_CODE }}.ddev.site' --title='WordPress' --admin_user='admin' --admin_password='admin123' --admin_email='admin@admin.com'


